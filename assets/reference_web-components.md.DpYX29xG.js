import{_ as o,c as n,a2 as a,o as t}from"./chunks/framework.Dz7_3PEu.js";const l=JSON.parse('{"title":"Web Components","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"reference/web-components.md","filePath":"pt/reference/web-components.md","lastUpdated":1737339887000}'),s={name:"reference/web-components.md"};function r(m,e,p,c,i,d){return t(),n("div",null,e[0]||(e[0]=[a('<h1 id="web-components" tabindex="-1">Web Components <a class="header-anchor" href="#web-components" aria-label="Permalink to &quot;Web Components&quot;">​</a></h1><h3 id="o-que-sao-web-components" tabindex="-1"><strong>O que são Web Components?</strong> <a class="header-anchor" href="#o-que-sao-web-components" aria-label="Permalink to &quot;**O que são Web Components?**&quot;">​</a></h3><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_components" target="_blank" rel="noreferrer">Web Components</a> são uma tecnologia nativa do navegador que permite criar componentes encapsulados e reutilizáveis, com uma interface bem definida. Esses componentes podem ser usados em qualquer framework ou até em projetos sem framework, como se fossem elementos HTML personalizados.</p><p>A ideia é que você crie um componente que seja independente de qualquer tecnologia específica, e depois use esse componente onde quiser, seja em React, Angular, Vue, ou até em um projeto sem nenhum framework.</p>',4)]))}const b=o(s,[["render",r]]);export{l as __pageData,b as default};
